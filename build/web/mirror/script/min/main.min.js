angular.module("urcMirror",[]).run(function(o){o.safeApply=function(o){var e=this.$root.$$phase;"$apply"==e||"$digest"==e?o&&"function"==typeof o&&o():this.$apply(o)};var e="ws://127.0.0.1:8080/ws",n=new autobahn.Connection({url:e,realm:"realm1"});n.onopen=function(e){o.session=e,o.connection=n,o.$broadcast("connected"),e.register("mirror."+e.id,function(){return{id:e.id,module:"web",name:document.title,registrations:_.reduce(e.registrations,function(o,e){return o[e.procedure]=_.pick(e,"id","procedure","active"),o},{}),subscriptions:_.reduce(_.flatten(e.subscriptions),function(o,e){return o[e.topic]=_.pick(e,"id","topic","active"),o},{})}}).then(function(){e.call("mirror",[e.id]).then(function(){e.call("mirror.reflection",[]).then(function(e){console.log(e),o.reflections=e,o.safeApply()})})})},n.open()}).controller("mainCTRL",function(o){o.publish=function(e,n,i){try{console.log(e,n,i),n=n?JSON.parse(n):void 0,i=i?JSON.parse(i):void 0,o.session.publish(e,n,i,{exclude_me:!1})}catch(t){console.error(t)}},o.$on("connected",function(){console.log("event received"),o.session.subscribe("mirror.reflection",function(o,e){console.log(e)}).then(function(){console.log("subscribed to topic")},function(o){console.log("failed to subscribe to topic",o)}),o.session.subscribe("test",function(o,e){console.log("test2",o,e)}).then(function(){console.log("subscribed to topic")},function(o){console.log("failed to subscribe to topic",o)})})}).directive("validateJson",function(){return{require:"ngModel",link:function(o,e,n,i){i.$parsers.unshift(function(o){var e=!1;if(o)try{var t=JSON.parse(o);switch(n.validateJson){case"object":e=_.isPlainObject(t),i.$setValidity("jsonobject",e);break;case"array":e=_.isArray(t),i.$setValidity("jsonarray",e);break;default:e=!!t}}catch(r){}else e=!0;return i.$setValidity("json",e),e?o:void 0})}}});